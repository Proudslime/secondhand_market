{"remainingRequest":"F:\\vuecodeprogramming\\vue2018011157\\springboot\\tfs_05\\node_modules\\babel-loader\\lib\\index.js!F:\\vuecodeprogramming\\vue2018011157\\springboot\\tfs_05\\src\\untils\\http.js","dependencies":[{"path":"F:\\vuecodeprogramming\\vue2018011157\\springboot\\tfs_05\\src\\untils\\http.js","mtime":1623929224721},{"path":"F:\\vuecodeprogramming\\vue2018011157\\springboot\\tfs_05\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621664035134},{"path":"F:\\vuecodeprogramming\\vue2018011157\\springboot\\tfs_05\\node_modules\\babel-loader\\lib\\index.js","mtime":1621664054091}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Loading, Message } from 'element-ui';\nimport router from \"../router/index.js\";\n\nfunction startLoading() {\n  loading = Loading.service({\n    lock: true,\n    text: '加载中……'\n  });\n}\n\nfunction endLoading() {\n  loading.close();\n}\n\naxios.interceptors.request.use(function (confing) {\n  startLoading();\n\n  if (localStorage.eToken) {\n    confing.headers.Autorization = localStorage.eToken;\n  }\n\n  return confing;\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  endLoading();\n  return response;\n}, function (error) {\n  Message.error(error.response.data);\n  endLoading(); // 获取状态码\n\n  var status = error.response.status;\n\n  if (status === 401) {\n    Message.error('请重新登录'); //清楚token\n\n    localStorage.removeItem('eToken'); //跳转到登录页面\n\n    router.push('/');\n  }\n\n  return Promise.reject(error);\n});\nexport default axios;",{"version":3,"sources":["F:\\vuecodeprogramming\\vue2018011157\\springboot\\tfs_05\\src\\untils\\http.js"],"names":["axios","Loading","Message","router","startLoading","loading","service","lock","text","endLoading","close","interceptors","request","use","confing","localStorage","eToken","headers","Autorization","error","Promise","reject","response","data","status","removeItem","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,YAAjC;AACA,OAAOC,MAAP;;AAEA,SAASC,YAAT,GAAwB;AACvBC,EAAAA,OAAO,GAAGJ,OAAO,CAACK,OAAR,CAAgB;AACzBC,IAAAA,IAAI,EAAC,IADoB;AAEzBC,IAAAA,IAAI,EAAC;AAFoB,GAAhB,CAAV;AAIA;;AAED,SAASC,UAAT,GAAsB;AACrBJ,EAAAA,OAAO,CAACK,KAAR;AACA;;AAEDV,KAAK,CAACW,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACC,UAACC,OAAD,EAAa;AACZV,EAAAA,YAAY;;AAEZ,MAAIW,YAAY,CAACC,MAAjB,EAAyB;AACxBF,IAAAA,OAAO,CAACG,OAAR,CAAgBC,YAAhB,GAA+BH,YAAY,CAACC,MAA5C;AACA;;AAED,SAAOF,OAAP;AACA,CATF,EAUC,UAACK,KAAD,EAAW;AACV,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CAZF;AAeAnB,KAAK,CAACW,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CACI,UAACS,QAAD,EAAc;AACVb,EAAAA,UAAU;AACV,SAAOa,QAAP;AACH,CAJL,EAKI,UAACH,KAAD,EAAW;AACPjB,EAAAA,OAAO,CAACiB,KAAR,CAAcA,KAAK,CAACG,QAAN,CAAeC,IAA7B;AACAd,EAAAA,UAAU,GAFH,CAIP;;AAJO,MAKCe,MALD,GAKYL,KAAK,CAACG,QALlB,CAKCE,MALD;;AAOP,MAAIA,MAAM,KAAK,GAAf,EAAoB;AAChBtB,IAAAA,OAAO,CAACiB,KAAR,CAAc,OAAd,EADgB,CAEZ;;AACJJ,IAAAA,YAAY,CAACU,UAAb,CAAwB,QAAxB,EAHgB,CAIZ;;AACJtB,IAAAA,MAAM,CAACuB,IAAP,CAAY,GAAZ;AACH;;AACD,SAAON,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CApBL;AAsBA,eAAenB,KAAf","sourcesContent":["import axios from 'axios'\r\nimport { Loading, Message } from 'element-ui'\r\nimport router from '../router/index.js'\r\n\r\nfunction startLoading() {\r\n\tloading = Loading.service({\r\n\t\tlock:true,\r\n\t\ttext:'加载中……',\r\n\t})\r\n}\r\n\r\nfunction endLoading() {\r\n\tloading.close()\r\n}\r\n\r\naxios.interceptors.request.use(\r\n\t(confing) => {\r\n\t\tstartLoading()\r\n\t\t\r\n\t\tif (localStorage.eToken) {\r\n\t\t\tconfing.headers.Autorization = localStorage.eToken\r\n\t\t}\r\n\t\t\r\n\t\treturn confing\r\n\t},\r\n\t(error) => {\r\n\t\treturn Promise.reject(error)\r\n\t}\r\n)\r\n\r\naxios.interceptors.response.use(\n    (response) => {\n        endLoading()\n        return response\n    },\n    (error) => {\n        Message.error(error.response.data)\n        endLoading()\n\n        // 获取状态码\n        const { status } = error.response\n\n        if (status === 401) {\n            Message.error('请重新登录')\n                //清楚token\n            localStorage.removeItem('eToken')\n                //跳转到登录页面\n            router.push('/')\n        }\n        return Promise.reject(error)\n    }\n)\nexport default axios"]}]}